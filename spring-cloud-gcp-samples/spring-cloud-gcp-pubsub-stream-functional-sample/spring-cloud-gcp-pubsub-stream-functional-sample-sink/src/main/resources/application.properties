spring.cloud.stream.function.bindings.logUserMessage1-in-0=input1
spring.cloud.stream.bindings.input1.destination=test-topic1

spring.cloud.stream.function.bindings.logUserMessage2-in-0=input2
spring.cloud.stream.bindings.input2.destination=test-topic2

# Optional, as Spring Cloud Stream will autodiscover the correct functional bean.
spring.cloud.function.definition=logUserMessage1;logUserMessage2

# Custom port to avoid conflict with the Source app.
server.port=8081

#spring.cloud.gcp.project-id=[YOUR_GCP_PROJECT_ID]
#spring.cloud.gcp.credentials.location=file:[LOCAL_PATH_TO_CREDENTIALS]

spring.cloud.stream.gcp.pubsub.default.consumer.auto-create-resources=false
spring.cloud.stream.gcp.pubsub.bindings.input1.consumer.subscription-name=test-topic1-sub # manually create subscription with ordering enabled
spring.cloud.stream.gcp.pubsub.bindings.input2.consumer.subscription-name=test-topic2-sub # manually create subscription with ordering not enabled

spring.cloud.gcp.project-id=my-gcp-pubsub-project-id
spring.cloud.gcp.credentials.location=file:/path/to/service-account-key.json